name: Deploy to Vimexx (FTP)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message'
        required: false
        default: 'Manual FTP deployment'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Checkout Repository
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
        
    - name: 🧹 Clean npm cache
      run: npm cache clean --force
      
    - name: 🔧 Install Dependencies (with fallback)
      run: |
        echo "Installing dependencies..."
        npm install --no-package-lock --legacy-peer-deps || npm install --force
        
    - name: 🏗️ Generate Static Website
      run: |
        echo "🏗️ Building static site for Vimexx..."
        node generate-static.cjs
        echo "✅ Static site generated!"
        ls -la static-site/
        
    - name: 🔍 Debug FTP Connection
      run: |
        echo "🔍 FTP Connection debugging for Vimexx:"
        echo "Server: ${{ secrets.FTP_SERVER }}"
        echo "Username: ${{ secrets.FTP_USERNAME }}"
        echo ""
        echo "Testing FTP connection on port 21..."
        timeout 10 nc -zv ${{ secrets.FTP_SERVER }} 21 && echo "✅ FTP port 21 accessible" || echo "❌ FTP port 21 not accessible"
        echo ""
        echo "Testing with curl FTP..."
        curl --connect-timeout 10 -v ftp://${{ secrets.FTP_SERVER }}/ --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" || echo "❌ FTP authentication failed"
        
    - name: 📤 Deploy to Vimexx via FTP (Method 1)
      id: ftp_deploy_1
      continue-on-error: true
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./static-site/
        server-dir: /public_html/
        protocol: ftp
        port: 21
        security: loose
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/*.log
        log-level: verbose
        
    - name: 📤 Deploy to Vimexx via FTP (Method 2 - Alternative)
      if: steps.ftp_deploy_1.outcome == 'failure'
      id: ftp_deploy_2
      continue-on-error: true
      run: |
        echo "📤 Trying alternative FTP method with lftp..."
        sudo apt-get update && sudo apt-get install -y lftp
        
        lftp -u "${{ secrets.FTP_USERNAME }}","${{ secrets.FTP_PASSWORD }}" ftp://${{ secrets.FTP_SERVER }}:21 << EOF
        set ftp:ssl-allow false
        set ssl:verify-certificate false
        set net:timeout 30
        set net:max-retries 3
        set ftp:passive-mode true
        
        pwd
        mkdir -p public_html
        cd public_html
        lcd static-site
        mirror -R . .
        ls -la
        quit
        EOF
        
    - name: 📤 Deploy to Vimexx via FTP (Method 3 - Basic FTP)
      if: steps.ftp_deploy_1.outcome == 'failure' && steps.ftp_deploy_2.outcome == 'failure'
      run: |
        echo "📤 Trying basic FTP..."
        sudo apt-get install -y ftp
        
        cat > ftp_commands.txt << EOF
        open ${{ secrets.FTP_SERVER }} 21
        user ${{ secrets.FTP_USERNAME }} ${{ secrets.FTP_PASSWORD }}
        binary
        passive
        cd public_html
        lcd static-site
        put index.html
        put robots.txt
        put sitemap.xml
        put .htaccess
        mkdir static
        cd static
        lcd static
        mput *
        quit
        EOF
        
        ftp -n < ftp_commands.txt
        rm ftp_commands.txt
        
    - name: 🎉 Deployment Success
      run: |
        echo "🎉 Website successfully deployed to Vimexx!"
        echo "📍 Check your website at: https://aggregaatkopen.com"
        echo "⏰ Deployed at: $(date)"
        
    - name: 📝 Create Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Status**: Successful" >> $GITHUB_STEP_SUMMARY
        echo "📅 **Date**: $(date)" >> $GITHUB_STEP_SUMMARY  
        echo "🌐 **Website**: https://aggregaatkopen.com" >> $GITHUB_STEP_SUMMARY
        echo "📂 **Files deployed**: Static HTML, CSS, JS, robots.txt, sitemap.xml" >> $GITHUB_STEP_SUMMARY
  1	name: Deploy to Vimexx (FTP)
     2	
     3	on:
     4	  push:
     5	    branches: [ main ]
     6	  workflow_dispatch:
     7	    inputs:
     8	      deploy_message:
     9	        description: 'Deployment message'
    10	        required: false
    11	        default: 'Manual FTP deployment'
    12	
    13	jobs:
    14	  deploy:
    15	    runs-on: ubuntu-latest
    16	    
    17	    steps:
    18	    - name: üöÄ Checkout Repository
    19	      uses: actions/checkout@v4
    20	      
    21	    - name: üì¶ Setup Node.js
    22	      uses: actions/setup-node@v4
    23	      with:
    24	        node-version: '20'
    25	        registry-url: 'https://registry.npmjs.org'
    26	        
    27	    - name: üßπ Clean npm cache
    28	      run: npm cache clean --force
    29	      
    30	    - name: üîß Install Dependencies (with fallback)
    31	      run: |
    32	        echo "Installing dependencies..."
    33	        npm install --no-package-lock --legacy-peer-deps || npm install --force
    34	        
    35	    - name: üèóÔ∏è Generate Static Website
    36	      run: |
    37	        echo "üèóÔ∏è Building static site for Vimexx..."
    38	        node generate-static.cjs
    39	        echo "‚úÖ Static site generated!"
    40	        ls -la static-site/
    41	        
    42	    - name: üîç Debug FTP Connection
    43	      run: |
    44	        echo "üîç FTP Connection debugging for Vimexx:"
    45	        echo "Server: ${{ secrets.FTP_SERVER }}"
    46	        echo "Username: ${{ secrets.FTP_USERNAME }}"
    47	        echo ""
    48	        echo "Testing FTP connection on port 21..."
    49	        timeout 10 nc -zv ${{ secrets.FTP_SERVER }} 21 && echo "‚úÖ FTP port 21 accessible" || echo "‚ùå FTP port 21 not accessible"
    50	        echo ""
    51	        echo "Testing with curl FTP..."
    52	        curl --connect-timeout 10 -v ftp://${{ secrets.FTP_SERVER }}/ --user "${{ secrets.FTP_USERNAME }}:${{ secrets.FTP_PASSWORD }}" || echo "‚ùå FTP authentication failed"
    53	        
    54	    - name: üì§ Deploy to Vimexx via FTP (Method 1)
    55	      id: ftp_deploy_1
    56	      continue-on-error: true
    57	      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
    58	      with:
    59	        server: ${{ secrets.FTP_SERVER }}
    60	        username: ${{ secrets.FTP_USERNAME }}
    61	        password: ${{ secrets.FTP_PASSWORD }}
    62	        local-dir: ./static-site/
    63	        server-dir: /public_html/
    64	        protocol: ftp
    65	        port: 21
    66	        security: loose
    67	        exclude: |
    68	          **/.git*
    69	          **/.git*/**
    70	          **/node_modules/**
    71	          **/*.log
    72	        log-level: verbose
    73	        
    74	    - name: üì§ Deploy to Vimexx via FTP (Method 2 - Alternative)
    75	      if: steps.ftp_deploy_1.outcome == 'failure'
    76	      id: ftp_deploy_2
    77	      continue-on-error: true
    78	      run: |
    79	        echo "üì§ Trying alternative FTP method with lftp..."
    80	        sudo apt-get update && sudo apt-get install -y lftp
    81	        
    82	        lftp -u "${{ secrets.FTP_USERNAME }}","${{ secrets.FTP_PASSWORD }}" ftp://${{ secrets.FTP_SERVER }}:21 << EOF
    83	        set ftp:ssl-allow false
    84	        set ssl:verify-certificate false
    85	        set net:timeout 30
    86	        set net:max-retries 3
    87	        set ftp:passive-mode true
    88	        
    89	        pwd
    90	        mkdir -p public_html
    91	        cd public_html
    92	        lcd static-site
    93	        mirror -R . .
    94	        ls -la
    95	        quit
    96	        EOF
    97	        
    98	    - name: üì§ Deploy to Vimexx via FTP (Method 3 - Basic FTP)
    99	      if: steps.ftp_deploy_1.outcome == 'failure' && steps.ftp_deploy_2.outcome == 'failure'
   100	      run: |
   101	        echo "üì§ Trying basic FTP..."
   102	        sudo apt-get install -y ftp
   103	        
   104	        cat > ftp_commands.txt << EOF
   105	        open ${{ secrets.FTP_SERVER }} 21
   106	        user ${{ secrets.FTP_USERNAME }} ${{ secrets.FTP_PASSWORD }}
   107	        binary
   108	        passive
   109	        cd public_html
   110	        lcd static-site
   111	        put index.html
   112	        put robots.txt
   113	        put sitemap.xml
   114	        put .htaccess
   115	        mkdir static
   116	        cd static
   117	        lcd static
   118	        mput *
   119	        quit
   120	        EOF
   121	        
   122	        ftp -n < ftp_commands.txt
   123	        rm ftp_commands.txt
   124	        
   125	    - name: üéâ Deployment Success
   126	      run: |
   127	        echo "üéâ Website successfully deployed to Vimexx!"
   128	        echo "üìç Check your website at: https://aggregaatkopen.com"
   129	        echo "‚è∞ Deployed at: $(date)"
   130	        
   131	    - name: üìù Create Deployment Summary
   132	      run: |
   133	        echo "## üöÄ Deployment Summary" >> $GITHUB_STEP_SUMMARY
   134	        echo "" >> $GITHUB_STEP_SUMMARY
   135	        echo "‚úÖ **Status**: Successful" >> $GITHUB_STEP_SUMMARY
   136	        echo "üìÖ **Date**: $(date)" >> $GITHUB_STEP_SUMMARY  
   137	        echo "üåê **Website**: https://aggregaatkopen.com" >> $GITHUB_STEP_SUMMARY
   138	        echo "üìÇ **Files deployed**: Static HTML, CSS, JS, robots.txt, sitemap.xml" >> $GITHUB_STEP_SUMMARY
